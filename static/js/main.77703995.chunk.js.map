{"version":3,"sources":["utils/utils.js","components/EntryDetails/EntryDetails.js","components/Entry/Entry.js","assets/logo.png","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["getDomElementsFromEscapedHtmlStr","HtmlStr","str","DOMParser","parseFromString","documentElement","textContent","decodeHtml","EntryDetails","modal","toggle","content","console","log","Modal","isOpen","className","ModalBody","contentEditable","dangerouslySetInnerHTML","__html","innerHTML","ModalFooter","Button","color","onClick","Entry","props","useState","author_name","setAuthorName","author_uri","setAuthorUri","post_title","setTitle","post_content","setContent","setModal","useEffect","author","entry","querySelector","name","uri","title","body","Card","tag","style","cursor","CardBody","CardSubtitle","href","CardTitle","textAlign","Header","Container","Row","Col","src","logo","alt","id","category","App","feed","setFeed","feed_title","setFeedTitle","feed_category","setCategory","fetch","then","response","text","window","data","getAttribute","entries","querySelectorAll","fluid","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77703995.chunk.js","sourcesContent":["\r\n  const RSS_FEED_URL = 'https://www.reddit.com/r/cybersecurity.rss';\r\n  \r\n  \r\n  \r\n  function decodeHtml(HtmlStr) {\r\n    var doc = new DOMParser().parseFromString(HtmlStr, \"text/html\");\r\n    return doc.documentElement.textContent;\r\n  }\r\n\r\n  function getHtmlStr(Node){\r\n    return Node.documentElement.textContent;\r\n  }\r\n\r\n  function getDomElementsFromEscapedHtmlStr(HtmlStr){\r\n    \r\n    let str = decodeHtml(HtmlStr)\r\n    let dom =  new DOMParser().parseFromString(str, \"text/html\");\r\n   \r\n    return dom\r\n  }\r\n\r\n\r\n  export {\r\n    RSS_FEED_URL,\r\n    decodeHtml,\r\n    getHtmlStr,\r\n    getDomElementsFromEscapedHtmlStr\r\n  }","\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport './EntryDetails.css'\r\n\r\nimport {getHtmlStr} from '../../utils/utils'\r\n\r\n\r\nconst EntryDetails = ({modal,toggle,content}) => {\r\n\r\n\r\n    console.log(content)\r\n \r\n  return (\r\n    <div >\r\n\r\n    <Modal isOpen={modal} toggle={toggle} className='modal-dialog'>\r\n      <ModalBody>\r\n            {content ? \r\n            <div contentEditable='false' dangerouslySetInnerHTML={{ __html:  content.innerHTML}} />\r\n                :\r\n                ''\r\n        }\r\n\r\n\r\n        </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default EntryDetails;\r\n","import React,{useEffect,useState} from 'react';\r\nimport {\r\n  Card, CardBody,\r\n  CardTitle, CardSubtitle, CardText\r\n} from 'reactstrap';\r\n\r\nimport './Entry.css'\r\n\r\nimport {getDomElementsFromEscapedHtmlStr} from '../../utils/utils'\r\n\r\n\r\nimport EntryDetails from '../EntryDetails/EntryDetails'\r\n\r\nfunction Entry(props){\r\n\r\n    const [author_name,setAuthorName] = useState();\r\n    const [author_uri,setAuthorUri] = useState();\r\n    const [post_title,setTitle] = useState();\r\n    const [post_content,setContent] = useState(null)\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        const author = props.entry.querySelector('author');\r\n\r\n        const name = author.querySelector('name')\r\n        const uri = author.querySelector('uri')\r\n\r\n        setAuthorName(name.innerHTML)\r\n        setAuthorUri(uri.innerHTML)\r\n\r\n        const title =  props.entry.querySelector('title');\r\n\r\n        setTitle(title.innerHTML)\r\n\r\n        const content = props.entry.querySelector('content');\r\n\r\n        const dom = getDomElementsFromEscapedHtmlStr(content.innerHTML)\r\n            \r\n        const body = dom.querySelector('body')\r\n    \r\n        setContent(body)\r\n\r\n\r\n    },[props.entry])\r\n\r\n    return (\r\n        <div className=\"EntryCard\" >\r\n          <EntryDetails modal={modal} toggle={toggle} content={post_content}/>\r\n          <Card tag=\"h1\" onClick={()=>toggle()} style={{ cursor: \"pointer\" }}>\r\n            <CardBody>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Posted by <a href={author_uri}>{author_name}</a></CardSubtitle>\r\n              <CardTitle tag=\"h3\" style={{textAlign:\"center\"}}>{post_title}</CardTitle>\r\n            </CardBody>\r\n          </Card>\r\n\r\n        </div>\r\n      );\r\n\r\n\r\n} \r\n\r\n\r\n\r\nexport default Entry;","export default __webpack_public_path__ + \"static/media/logo.a244d83f.png\";","import React from 'react';\r\n\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport \"./Header.css\"\r\n\r\nimport logo from '../../assets/logo.png'\r\n\r\n\r\nfunction Header(props){\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n                <Row className=\"Banner\">\r\n\r\n                </Row>\r\n                \r\n                <Col className=\"Details\">\r\n                 <Row>\r\n                    <img src={logo} alt=\"Logo for community\" id='cybersecurity-img'/>\r\n                    <h1>{props.title}</h1>\r\n                </Row>\r\n                    <h2 id=\"Reddit_Title\">{props.category}</h2>\r\n                </Col>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Header;","import './App.css';\nimport {useEffect,useState} from 'react';\n\nimport {RSS_FEED_URL} from './utils/utils'\nimport { Container, Row } from 'reactstrap';\n\n\nimport Entry from'./components/Entry/Entry'\nimport Header from './components/Header/Header'\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n\n  const [feed,setFeed] =useState([])\n  const [feed_title, setFeedTitle] = useState('')\n  const [feed_category,setCategory] = useState('')\n  \n  useEffect(() => {\n    fetch(RSS_FEED_URL)\n    \n    .then(response => response.text())\n    .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n    .then(data =>{\n    \n          console.log(data)\n\n          const category = data.querySelector(\"category\");\n\n          console.log(category.getAttribute('label'))\n\n          setCategory(category.getAttribute('label'))\n\n          const title = data.querySelector(\"title\").innerHTML;\n\n          setFeedTitle(title)\n\n          const entries = data.querySelectorAll(\"entry\");\n\n          setFeed([...entries])\n\n\n  } )\n   \n  }, [])\n\n\n  return (\n    <div className=\"App\">\n        <Container fluid>\n\n              <Row>\n                     <Header title={feed_title} category={feed_category}/>\n              </Row>\n\n\n              <Row className=\"Feed\">              \n                  {feed.map((entry,index)=>{\n                    return (\n                    <Row className=\"EntryRow\">\n                      <Entry entry={entry} key={index}/>\n                    </Row>\n                    )\n                  })}\n\n              </Row>\n\n        </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}